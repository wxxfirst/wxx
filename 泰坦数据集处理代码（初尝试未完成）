import pandas as pd
import numpy as np
import matplotlib.pyplot as mp

#1、读取文件数据
df=pd.read_csv("C:/360安全浏览器下载/train.csv")

#2、查看文件信息

print(df.describe())
print(df.info())
print(df)


#3、删除无关数据
del(df['PassengerId'])
del(df['Name'])
del(df['SibSp'])
del(df['Parch'])
del(df['Ticket'])
del(df['Cabin'])

#print(df.describe())
print(df.info())
#print(df)

#4、数据可视化
#总体

mp.figure('总体存活率与死亡率')
num1=df['Survived'].value_counts()
mp.pie(
num1,
explode=None,
labels=['Survived','Die'],
colors=['yellow','green'],
    autopct='%.3f%%',
    startangle=90,
    radius=1
)
mp.legend()
mp.show()

#不同性别的存活率

data_dict={}
dict_={}
data=df.groupby(by='Sex')['Survived'].value_counts()/df['Survived'].value_counts()
print(data)
data_dict['Female']=data.loc['female']
data_dict['Male']=data.loc['male']
dataframe=pd.DataFrame(data_dict)
print(dataframe)

#不同年龄段的存活率

list_new=df['Age']
print(list_new.min(),list_new.max())
age_array=np.arange(0,81,10)
survived_number=[]
people_number=[]
number=0
num=0
for age in age_array:
    number=df[(list_new>age) & (list_new<=age+10)]
    num=len(number)
    people_number.append(num)
print(people_number)
for age in age_array:
    number=df.loc[(list_new>age) & (list_new<=age+10)]['Survived'].sum()
    survived_number.append(number)
print(survived_number)

mp.figure("不同年龄段的存活情况",facecolor='Gray')
mp.bar(
    age_array+0.5,
    people_number,
    width=10,
    color='yellow',
    label='各年龄段总人数'
)
mp.bar(
    age_array+0.5,
    survived_number,
    width=10,
    color='green',
    label='各年龄段存活人数'
)
mp.xticks(range(0,81,10))
mp.yticks(range(0,240,40))
mp.legend()
mp.show()


#不同等级顾客的存活率

data_Pclass=df.groupby(by='Pclass')['Survived'].value_counts()
print(data_Pclass)
mp.figure('不同等级顾客的存活率与死亡率', facecolor='gray')
picture1=mp.subplot(1,3,1)
picture1.pie(
    data_Pclass.loc[1][::-1],
    labels=['survived','dead'],
    colors=['blue','green'],
    autopct='%.3f%%',
    startangle=90,
    radius=1.5
)
picture2=mp.subplot(1,3,2)
picture2.pie(
    data_Pclass.loc[2][::-1],
    pctdistance=0.4,
    labeldistance=0.6,
    labels=['survived','dead'],
    colors=['red','orange'],
    autopct='%.3f%%',
    shadow=True,
    startangle=90,
    radius=1.5
)
picture3=mp.subplot(1,3,3)
picture3.pie(
    data_Pclass.loc[3][::-1],
    pctdistance=0.4,
    labeldistance=0.6,
    labels=['survived','dead'],
    colors=['brown','white'],
    autopct='%.3f%%',
    shadow=True,
    startangle=90,
    radius=1.5
)
mp.show()

#不同港口登录的存活率

dataframe_Embark=df.groupby(by='Embarked')['Survived'].value_counts()
print(dataframe_Embark)
mp.figure('不同港口登录的存活率',facecolor='gray')
mp.subplot(1,3,1)
mp.axis('equal')
mp.pie(
    dataframe_Embark.loc['C'][::-1],
    labels=['survived','dead'],
    colors=['orange','brown'],
    autopct='%.2f%%',
    shadow=True,
    startangle=45,
    radius=1.2
)
mp.legend(loc='lower left')

mp.subplot(1,3,2)
mp.axis('equal')
mp.pie(
    dataframe_Embark.loc['Q'][::-1],
    labels=['dead','survived'],
    colors=['yellow','khaki'],
    autopct='%.2f%%',
    shadow=True,
    startangle=45,
    radius=1.2
)
mp.legend(loc='best')

mp.subplot(1,3,3)
mp.axis('equal')
mp.pie(
    dataframe_Embark.loc['S'][::-1],
    labels=['dead','survived'],
    colors=['pink','plum'],
    autopct='%.2f%%',
    shadow=True,
    startangle=45,
    radius=1.2
)
mp.legend(loc='lower right')
mp.show()

#登录港口与等级的关系
data_Embark=df['Embarked'].value_counts()
print(data_Embark)
mp.figure('不同港口登陆人数对比图')
mp.pie(
    data_Embark[::-1],
    pctdistance=0.8,
    labels=['S','C','Q'],
    colors=['tan','gold','khaki'],
    autopct='%.2f%%',
    shadow=True,
    startangle=30,
    radius=1.2
)
mp.legend(loc='best')
mp.show()
"""
"""
mask=(df['Survived']==1)
xticks=['S','C','Q']
y=df.loc[::][mask].groupby(by='Pclass')['Embarked'].value_counts()
mp.show()

#不同票价的存活率
data_fS=df.groupby(by='Fare')['Survived'].value_counts()
print(data_fS)
data_f=df.groupby(by='Fare')['Fare']
print(data_f)
mp.show()
